name: Build

on:
  push:
    branches: [ "main", "meson" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v1

      - name: Install dependencies
        run: sudo apt-get -y install software-properties-common build-essential wget git valac libglib2.0-dev libgee-0.8-dev libjson-glib-dev libreadline-dev libsoup2.4-dev ninja-build libgda-5.0-dev libgda-5.0-postgres

      - name: Install Meson
        run: sudo pip install meson

      - name: Check out log4vala
        uses: actions/checkout@v3
        with:
          repository: nmelnick/log4vala
          path: log4vala-dep

      - name: Check out ambition
        uses: actions/checkout@v3
        with:
          repository: ambitionframework/ambition
          ref: refs/heads/rethink-refresh
          path: ambition-dep

      - name: Check out almanna
        uses: actions/checkout@v3
        with:
          repository: ambitionframework/almanna
          path: almanna-dep

      - name: Install dependencies
        run: for i in log4vala ambition almanna; do cd $i-dep && meson --prefix=/usr builddir && cd builddir && ninja && sudo ninja install && cd ../..; done

      - name: almanna
        run: cd almanna && meson --prefix=~/.ambition-framework/almanna builddir && cd builddir && ninja && ninja test && ninja install

      - name: engine-scgi
        run: cd engine-scgi && meson --prefix=~/.ambition-framework/engine-scgi builddir && cd builddir && ninja && ninja install

      - name: textcaptcha
        run: cd textcaptcha && meson --prefix=~/.ambition-framework/textcaptcha builddir && cd builddir && ninja && ninja install

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Tests
          path: almanna/builddir/meson-logs/*.xml,textcaptcha/builddir/meson-logs/*.xml
          reporter: java-junit
          fail-on-error: true
